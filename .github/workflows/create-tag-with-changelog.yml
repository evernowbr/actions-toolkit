# .github/workflows/tag-and-changelog.yml
name: Auto Tag and Changelog

on:
  push:
    branches: [ "main" ]
  workflow_call:
    outputs:
      release_version:
        description: "The new release version"
        value: ${{ jobs.release.outputs.new_tag }}

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      new_tag: ${{ steps.new_tag.outputs.new_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Important: fetch all history for git describe

    - name: Get latest tag (or default)
      id: get_tag
      run: |
        latest_tag=$(git describe --tags --abbrev=0 2>/dev/null || echo "")
        if [ -z "$latest_tag" ]; then
          echo "No existing tag found. Will create initial version v0.1.0"
          echo "latest_tag=none" >> "$GITHUB_OUTPUT"
        else
          echo "Found latest tag: $latest_tag"
          echo "latest_tag=$latest_tag" >> "$GITHUB_OUTPUT"
        fi

    - name: Generate new tag
      id: new_tag
      run: |
        if [ "${{ steps.get_tag.outputs.latest_tag }}" = "none" ]; then
          new_tag="v0.1.0"
        else
          version=${{ steps.get_tag.outputs.latest_tag }}
          version=${version#v}
          major=$(echo $version | cut -d. -f1)
          minor=$(echo $version | cut -d. -f2)
          patch=$(echo $version | cut -d. -f3)
          new_tag="v$major.$minor.$((patch+1))"
        fi
        echo "Generated new tag: $new_tag"
        echo "new_tag=$new_tag" >> "$GITHUB_OUTPUT"

    - name: Generate changelog
      id: changelog
      run: |
        if [ "${{ steps.get_tag.outputs.latest_tag }}" = "none" ]; then
          echo "Initial release. Listing all commits:" > changelog.md
          git log --pretty=format:"- %s" >> changelog.md
        else
          echo "Changelog since ${{ steps.get_tag.outputs.latest_tag }}:" > changelog.md
          git log ${{ steps.get_tag.outputs.latest_tag }}..HEAD --pretty=format:"- %s" >> changelog.md
        fi
        cat changelog.md

    - name: Commit and push tag
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag ${{ steps.new_tag.outputs.new_tag }}
        git push origin ${{ steps.new_tag.outputs.new_tag }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.new_tag.outputs.new_tag }}
        body_path: changelog.md
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
