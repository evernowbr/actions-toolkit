name: Dependency-Track SCA

on:
  workflow_call:
    inputs:
      name:
        required: true
        type: string
      version:
        required: true
        type: string
    secrets:
      DT_SCA_ENDPOINT:
        required: true
      DT_TOKEN:
        required: true

jobs:
  dt-security-scan:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Generate SBOM using Syft
        run: |
          echo "üîß Gerando SBOM da aplica√ß√£o" 
          syft dir:"${{ github.workspace }}" --verbose -o cyclonedx-json=raw_cyclonedx_report.json

          if [ $? -ne 0 ]; then
            echo "‚ùå Erro ao gerar o SBOM com Syft"
            exit 1
          fi

          echo "üßπ Normalizando SBOM..."
          jq 'if .components then .components |= unique_by(.name,.version) else . end' raw_cyclonedx_report.json > cyclonedx_report.json

          if [ ! -s cyclonedx_report.json ]; then
            echo "‚ùå SBOM normalizado est√° vazio ou n√£o foi gerado corretamente."
            exit 1
          fi

      - name: Upload SBOM to Dependency-Track
        env:
          DT_SCA_ENDPOINT: ${{ secrets.DT_SCA_ENDPOINT }}
          DT_TOKEN: ${{ secrets.DT_TOKEN }}
          DT_APP_DEFAULT_NAME: ${{ inputs.name }}
          DT_APP_DEFAULT_VERSION: ${{ inputs.version }}
        run: |
          echo "üîê Codificando SBOM em base64..."
          BOMCONTENT=$(base64 -w 0 < cyclonedx_report.json)

          echo "üì¶ Montando payload..."
          PAYLOAD=$(jq -n \
            --arg name "$DT_APP_DEFAULT_NAME" \
            --arg version "$DT_APP_DEFAULT_VERSION" \
            --arg bom "$BOMCONTENT" \
            '{projectName: $name, projectVersion: $version, autoCreate: true, bom: $bom}')

          echo "$PAYLOAD" > bom_payload.json

          echo "üì§ Enviando SBOM para o Dependency-Track..."
          RESPONSE=$(curl -s -w "%{http_code}" -o response.json -X PUT "${DT_SCA_ENDPOINT}/v1/bom" \
            -H "X-API-Key: ${DT_TOKEN}" \
            -H "Content-Type: application/json" \
            -d "@bom_payload.json")

          HTTP_STATUS=$(tail -n1 <<< "$RESPONSE")
          if [ "$HTTP_STATUS" -ne 200 ]; then
            echo "‚ùå Falha ao enviar SBOM. Status HTTP: $HTTP_STATUS"
            cat response.json
            exit 1
          fi

          sbomToken=$(jq -r '.token' response.json)
          if [ -z "$sbomToken" ] || [ "$sbomToken" == "null" ]; then
            echo "‚ùå Token de processamento do SBOM n√£o encontrado."
            exit 1
          fi

          echo "‚è≥ Aguardando processamento do SBOM..."
          for i in {1..25}; do
            STATUS=$(curl -s -X GET "${DT_SCA_ENDPOINT}/v1/bom/token/${sbomToken}" \
              -H "X-API-Key: ${DT_TOKEN}" \
              -H "Content-Type: application/json")

            PROCESSING=$(jq -r '.processing' <<< "$STATUS")
            if [ "$PROCESSING" == "false" ]; then
              echo "‚úÖ Processamento conclu√≠do."

              PROJECT_NAME_URLENCODED=$(echo "$DT_APP_DEFAULT_NAME" | jq -sRr @uri)

              echo "üîç Consultando UUID do projeto..."
              LOOKUP=$(curl -s -X GET "${DT_SCA_ENDPOINT}/v1/project/lookup?name=${PROJECT_NAME_URLENCODED}&version=${DT_APP_DEFAULT_VERSION}" \
                -H "X-API-Key: ${DT_TOKEN}" \
                -H "Content-Type: application/json")

              UUID=$(jq -r '.uuid' <<< "$LOOKUP")
              VIOLATIONS=$(jq -r '.metrics.policyViolationsSecurityUnaudited' <<< "$LOOKUP")

              if [ -z "$UUID" ] || [ "$UUID" == "null" ]; then
                echo "‚ùå UUID do projeto n√£o encontrado."
                exit 1
              fi

              echo "üîé UUID do projeto: $UUID"
              echo "üîê Viola√ß√µes de seguran√ßa n√£o auditadas: $VIOLATIONS"

              echo "##vso[task.setvariable variable=GATE_VALIDATION]$VIOLATIONS"
              exit 0
            fi
            echo "‚åõ Tentativa $i: ainda processando..."
            sleep 5
          done

          echo "‚è±Ô∏è Tempo excedido aguardando o processamento do SBOM."
          exit 1
   
