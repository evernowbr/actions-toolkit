# .github/workflows/docker-push.yml
name: Build and Push Docker Image to Google Artifact Registry

on:
  workflow_call:
    secrets:
      GCP_SERVICE_ACCOUNT_KEY:
        required: true
      GITHUB_TOKEN:
        required: true

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Extract repository name
      run: |
        IMAGE_NAME=$(basename $GITHUB_REPOSITORY)
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        echo "Using IMAGE_NAME=$IMAGE_NAME"

    - name: Extract version from release
      id: vars
      run: |
        echo "RELEASE_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV
        echo "Release version: ${GITHUB_REF##*/}"

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}'

    - name: Configure Docker for GAR
      run: |
        gcloud auth configure-docker us-central1-docker.pkg.dev

    - name: Remove existing 'latest' tag from previous image (if exists)
      run: |
        IMAGE_URL=us-central1-docker.pkg.dev/evernow-lab/applications/${{ env.IMAGE_NAME }}
        DIGEST=$(gcloud artifacts docker tags list $IMAGE_URL \
          --filter="tag:latest" \
          --format="value(version)" 2>/dev/null || true)

        if [ -n "$DIGEST" ]; then
          echo "Removing 'latest' tag from digest: $DIGEST"
          gcloud artifacts docker tags delete \
            $IMAGE_URL:latest --quiet || true
        else
          echo "No existing 'latest' tag to delete"
        fi

    - name: Build and push Docker image
      run: |
        docker build -t us-central1-docker.pkg.dev/evernow-lab/applications/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }} .
        docker push us-central1-docker.pkg.dev/evernow-lab/applications/${{ env.IMAGE_NAME }}:${{ env.RELEASE_VERSION }}

    - name: Add 'latest' tag to new image via digest
      run: |
        IMAGE_URL=us-central1-docker.pkg.dev/evernow-lab/applications/${{ env.IMAGE_NAME }}
        DIGEST=$(gcloud artifacts docker tags list $IMAGE_URL \
          --filter="tag=${{ env.RELEASE_VERSION }}" \
          --format="value(version)" | head -n1)

        if [ -n "$DIGEST" ]; then
          echo "Adding 'latest' tag to digest: $DIGEST"
          gcloud artifacts docker tags add \
            $IMAGE_URL@$DIGEST \
            $IMAGE_URL:latest
        else
          echo "ERROR: Digest for tag ${{ env.RELEASE_VERSION }} not found"
          exit 1
        fi
