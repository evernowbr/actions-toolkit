name: SonarQube Scan

on:
  workflow_call:
    inputs:
      PROJECT_KEY:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string
      BRANCH_NAME:
        required: true
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  sonar-scan:
    name: SonarQube Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create SonarQube project if not exists
        run: |
          PROJECT_KEY="${{ inputs.PROJECT_KEY }}"
          PROJECT_NAME="${{ inputs.PROJECT_NAME }}"
          SONAR_URL="${{ secrets.SONAR_HOST_URL }}"
          TOKEN="${{ secrets.SONAR_TOKEN }}"

          # Verifica se o projeto jÃ¡ existe no SonarQube
          curl -s -u "$TOKEN:" "$SONAR_URL/api/projects/search?projects=$PROJECT_KEY" | grep "\"key\":\"$PROJECT_KEY\"" > /dev/null
          if [ $? -ne 0 ]; then
            echo "Creating project $PROJECT_KEY on SonarQube..."
            curl -X POST -u "$TOKEN:" "$SONAR_URL/api/projects/create" \
              -d "name=$PROJECT_NAME" \
              -d "project=$PROJECT_KEY"
          else
            echo "Project already exists."
          fi

      - name: Cache Sonar packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube scan (Maven)
        run: |

          echo "Running scan on branch: $BRANCH_NAME"
          
          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ inputs.PROJECT_KEY }} \
            -Dsonar.branch.name=$BRANCH_NAME \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
