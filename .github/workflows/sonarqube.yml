name: SonarQube

on:
  workflow_call:
    inputs:
      PROJECT_KEY:
        required: true
        type: string
      PROJECT_NAME:
        required: true
        type: string
      BRANCH_NAME:
        required: true
        type: string
    secrets:
      SONAR_HOST_URL:
        required: true
      SONAR_TOKEN:
        required: true

jobs:
  sonar-scan:
    name: SonarQube SCA Scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Create SonarQube project if not exists
        run: |
          set -euo pipefail
          
          PROJECT_KEY="${{ inputs.PROJECT_KEY }}"
          PROJECT_NAME="${{ inputs.PROJECT_NAME }}"
          SONAR_URL="${{ secrets.SONAR_HOST_URL }}"
          TOKEN="${{ secrets.SONAR_TOKEN }}"

          echo "Verificando se o projeto $PROJECT_KEY já existe no SonarQube..."

          response=$(curl -s -u "$TOKEN:" "$SONAR_URL/api/projects/search?projects=$PROJECT_KEY")

          if echo "$response" | grep -q "\"key\":\"$PROJECT_KEY\""; then
            echo "Projeto já existe no SonarQube."
          else
            echo "Criando projeto $PROJECT_KEY no SonarQube..."
            create_response=$(curl -s -o /dev/null -w "%{http_code}" -X POST -u "$TOKEN:" "$SONAR_URL/api/projects/create" \
              -d "name=$PROJECT_NAME" \
              -d "project=$PROJECT_KEY")

            if [ "$create_response" -ne 200 ]; then
              echo "Erro ao criar o projeto. Código HTTP: $create_response"
              exit 1
            fi

            echo "Projeto criado com sucesso."
          fi

      - name: Cache Sonar packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar

      - name: Run SonarQube scan (Maven)
        run: |
          set -euo pipefail

          echo "Running scan on branch: ${{ inputs.BRANCH_NAME }}"

          mvn clean verify sonar:sonar \
            -Dsonar.projectKey=${{ inputs.PROJECT_KEY }} \
            -Dsonar.branch.name=${{ inputs.BRANCH_NAME }} \
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }} \
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}
